print = __builtin_print;


infix (SUM  ) + = (a, b) => {
    __builtin_add(a, b);
};
infix (SUM  ) - = (a, b) => __builtin_sub(a, b);
infix (PROD ) * = (a, b) => __builtin_mul(a, b);
infix (INFIX) < = (a, b) => __builtin_lt(a, b);
infix (INFIX) > = (a, b) => __builtin_gt(a, b);
infix (INFIX) eq = (a, b) => __builtin_eq(a, b);


prefix(LOW  +) if   = (cond) => cond;
infix (LOW  +) then = (c: Bool, pair) => __builtin_eval(pair(c));
infix (then +) else = (t: Syntax, f: Syntax) => (c: Bool) => __builtin_conditional(c, t, f);






exfix [:] = (x) => print(x);

[ 1 + [ 2 ] ];

