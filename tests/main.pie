print = __builtin_print;





loop = (c: Syntax, b: Syntax) => __builtin_conditional(__builtin_eval(c),
    {
        __builtin_eval(b);
        loop(c, b);
    },
"done"
);

operator(LOW +) while:: = (cond: Syntax, body: Syntax) => loop(c, b);



x = 0;
loop (__builtin_not(__builtin_eq(x, 10)), {
    print(x);
    x = __builtin_add(x, 1);
});


comment: x = 0;
comment: while (__builtin_not(__builtin_eq(x, 10))) {
comment:     print(x);
comment:     x = __builtin_add(x, 1);
comment: };



comment: Human = class {
comment:     name: String = "";
comment:     age: Int = 0;
comment: };

comment: ThingWithAge = class {
comment:     age: Int = 0;
comment: };


comment: func = (h: Human) => h.age;

comment: x: Human = Human("Ali", 23);
comment: t: ThingWithAge = ThingWithAge(25);

comment: print(func(x));
comment: comment: print(func(t));

