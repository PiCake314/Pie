print = __builtin_print;


.: makeList = (first: Int, rest: Int..., last: Int): List => List(first, makeList(rest...));

.: operator(LOW +) [ :... ] = (es: Int...): Int... => makeList(es...);



List: Type = class {
    elm: Int = 0;
    rest = "";
};


printList = (l: List) => {
    print(l.elm);
    __builtin_conditional(__builtin_eq(l.rest, ""), "", printList(l.rest));
};


4 = class {};
Int = 4;
print(Int);
x: 4 = Int();
print(x);

